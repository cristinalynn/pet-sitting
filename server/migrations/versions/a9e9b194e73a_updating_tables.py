"""updating tables

Revision ID: a9e9b194e73a
Revises: be81d9754653
Create Date: 2024-10-09 14:37:15.738469

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9e9b194e73a'
down_revision = 'be81d9754653'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('sitter_availability',
    sa.Column('sitter_id', sa.Integer(), nullable=False),
    sa.Column('availability_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['availability_id'], ['availability.id'], name=op.f('fk_sitter_availability_availability_id_availability')),
    sa.ForeignKeyConstraint(['sitter_id'], ['sitters.id'], name=op.f('fk_sitter_availability_sitter_id_sitters')),
    sa.PrimaryKeyConstraint('sitter_id', 'availability_id')
    )
    with op.batch_alter_table('sitters', schema=None) as batch_op:
        batch_op.drop_column('availability')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sitters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('availability', sa.VARCHAR(length=50), nullable=False))

    op.drop_table('sitter_availability')
    op.drop_table('availability')
    # ### end Alembic commands ###
